Abstract
There is a need to better understand and handle the 'dark matter' of proteomics—the vast diversity of post-translational and chemical modifications that are unaccounted in a typical mass spectrometry–based analysis and thus remain unidentified. We present a fragment-ion indexing method, and its implementation in peptide identification tool MSFragger, that enables a more than 100-fold improvement in speed over most existing proteome database search tools. Using several large proteomic data sets, we demonstrate how MSFragger empowers the open database search concept for comprehensive identification of peptides and all their modified forms, uncovering dramatic differences in modification rates across experimental samples and conditions. We further illustrate its utility using protein–RNA cross-linked peptide data and using affinity purification experiments where we observe, on average, a 300% increase in the number of identified spectra for enriched proteins. We also discuss the benefits of open searching for improved false discovery rate estimation in proteomics.
Main
Peptide identification algorithms have been a cornerstone of shotgun proteomics for several decades1. The most commonly used computational strategy is based on searching acquired tandem mass (MS/MS) spectra against a protein sequence database using database search algorithms2. However, even given substantial improvements in the quality of MS/MS data acquired on modern mass spectrometers, a large fraction of spectra remain unexplained.
We and others have been fascinated by the underlying complexity of the 'dark matter' in shotgun proteomics3—including the vast diversity of post-translational modifications (PTMs) as well as novel sequences (for example, mutations and splice isoforms)—that are unaccounted for in traditional database search and thus remain unidentified4,5,6,7,8. A number of computational strategies have been developed to detect such peptides including multistep database search9,10, curated modifications search9,11, spectral-pair based methods screening for modified versions of peptides initially identified in unmodified form12,13,14,15, sequence tagging16,17,18,19,20, and spectral alignment)21,22,23. However, practical and computationally efficient tools for this task are still needed. These efforts are exemplified by a recent report4 exploring the feasibility of searches using wide precursor mass tolerance of hundreds of Daltons ('open' searches) to identify modified peptides using conventional database search tools.
In our quest to develop a broadly applicable and fast computational strategy for open database search, we designed a novel fragment-ion indexing method that provides orders-of-magnitude improvement in speed over existing tools. We implemented this method in a new database search tool MSFragger. MSFragger makes open searches feasible even for data sets containing millions of MS/MS spectra. It is capable of performing open searches with variable modifications, making it applicable to data from labeling-based quantitative proteomics experiments. We demonstrate MSFragger's utility in reconstructing modification profiles across experiments under differing conditions and in the analysis of protein–RNA cross-linked peptides and affinity purification mass spectrometry (AP–MS) data. Finally, open searching uncovers and provides a potential solution to the problem of inaccurate false discovery rate (FDR) estimates in traditional narrow mass-window searches due to unaccounted peptide modifications. MSFragger is platform independent, not limited to data from a particular MS instrument, and can be incorporated easily into most existing data analysis pipelines.
Results
Fragment-ion indexing enables ultrafast database search
MSFragger begins by performing an in silico digestion of the protein database (Fig. 1a). It then removes redundant peptides and orders them by their theoretical mass (including any modified peptides generated as a result of variable modifications), creating a peptide index. Although peptide indexing has been described as a way to accelerate database search24,25,26, this step alone has little impact on spectrum similarity calculations, which is the most time-consuming step. MSFragger addresses this bottleneck by creating a novel theoretical fragment index. This enables highly efficient and simultaneous scoring of an experimental spectrum against all candidate peptides (Online Methods, Fig. 1b–d and Supplementary Fig. 1).
We first evaluated the performance of the MSFragger algorithm on a deep HEK293 (ref. 4) data set and compared it to that of commonly used search engines Comet27 and X! Tandem9. The scores and error rates of modified peptides are likely to be different from those of unmodified peptides, prompting class-specific FDR estimation28,29. To account for these differences, we adopted an extended mass model when computing peptide probabilities, ensuring mass-shift-dependent FDR estimation and filtering (Online Methods). We note that in open searches, the term 'modifications' is used interchangeably with 'mass shifts' and includes in-source fragmentation events, missed cleavages, and isotope errors. Overall, all search engines performed similarly when run using similar search parameters (Table 1). In the traditional (narrow-window) search, MSFragger and Comet identified 9,795 and 9,757 protein groups (1% protein FDR) and 456,548 and 461,806 PSMs (1% protein and PSM FDR), respectively. MSFragger also identified similar numbers as X! Tandem, when accounting for the innate variable modifications that X! Tandem specifies by default. In open search, which represents the primary motivation for the development of MSFragger, we observed a dramatic increase in the number of identified PSMs across all search engines, in line with the earlier report using SEQUEST4. For example, MSFragger identified 609,897 PSMs using open search, an increase of 33.6% compared to narrow-window search, with a minimal loss of 1.4% in the number of protein identifications. When performing protein inference using open-search results, we took a conservative approach, using only unmodified peptides and peptides with specified variable modifications (Online Methods). When all modified peptides were included, the number of protein identifications from open searches exceeded that of narrow-window searches (for example, by 4.4% for MSFragger). However, additional work is necessary to carefully evaluate the accuracy of the protein inference step when using all peptides identified in open search. Open searches using conventional database search tools are slow, given the vastly expanded search space. Comet and X! Tandem took 13.6 and 16.3 h, respectively, to analyze a single LC-MS/MS run using a 4-core workstation. In stark contrast, MSFragger took only 5.4 min, making it >150 times faster than these commonly used tools. We also compared MSFragger to tools that employ peptide indexing, such as Tide30 and SEQUEST HT (Supplementary Table 1). Tide, which allows 100-Da precursor windows only and does not take advantage of multiple processor cores, took 176.7 min (compared to 9.8 min with MSFragger when subjected to the same constraints). SEQUEST HT (Proteome Discoverer 2.1) took more than 11 h on a more powerful 8-core workstation. The speed and scalability (Supplementary Fig. 2) of MSFragger allowed open searching of the entire HEK293 data set (24 LC-MS/MS runs) in less than 30 min on a single powerful workstation, compared to the days or even weeks that would be required to search these data using existing tools on the same machine.
We also sought to compare MSFragger to algorithms specifically designed for comprehensive PTM analysis. MODa19 has been established as an effective tool for blind PTM search. Using comparable settings, both tools produced very similar PTM profiles (Supplementary Fig. 3), but MSFragger identified a larger number of PSMs than MODa, at an FDR of 1%: 622,857 (MSFragger, tryptic search) versus 522,812 (MODa, semi-tryptic search) and 439,216 (MODa, tryptic search). The difference between MODa and MSFragger results can be explained, in part, by the fact that MODa's algorithm localizes the mass shift to a particular amino acid, whereas open searching identifies only the peptide sequence and the mass shift (which may be the result of multiple modifications). Considering the computational time, MSFragger was notably faster (5.4 min; 24.5 min when restricted to a single core) than MODa, which took 204.7 min (semi-tryptic search) and 150 min (tryptic search) for a single LC-MS/MS run on a 4-core workstation (Supplementary Table 1).
Refinement of the open database-search strategy
It is often assumed that the number of identified unique peptide sequences would be greatly reduced in open search compared to narrow-window search due to the vastly expanded search space. However, our results using multiple search engines (Table 1) demonstrate that this is generally not the case. At the same time, it is true that not all unmodified, tryptic peptides found in narrow-window search are found in open search. To see whether those peptides can also be recovered, we implemented a boosting feature within MSFragger that preferentially ranks unmodified peptides over modified peptides when performing open search (Online Methods). However, such a strategy, while implemented as an option in MSFragger, did not improve the results significantly (Supplementary Fig. 4).
Open searching does not account for modified fragment ions, resulting in reduced sensitivity for common modifications when compared to traditional variable modification searching. However, the speed of MSFragger enables us to combine the approaches to successfully recover peptides with specified variable modifications at rates similar to unmodified peptides (Supplementary Fig. 5). Furthermore, we attempted to address the weakness of the open-search strategy for C-terminal modifications (as y-ions are the most abundant and commonly observed in collision-induced and higher-energy collisional dissociation) by inserting complementary ions6,31. Although we observed an increase in the recovery of peptides with modifications near the C terminus, the addition of complementary ions did not increase the overall number of identifications (Online Methods and Supplementary Fig. 6). A more effective strategy is to add complementary ions to the theoretical spectrum rather than the experimental spectrum, which we plan to pursue in future work via extension of the fragment-ion indexing scheme.
The problem of co-isolating multiple co-eluting peptides and the resulting chimeric MS/MS spectra is well established1,32 and manifests in unique ways in open searches. When a co-fragmented peptide is identified with a higher score, an artifactual (not attributed to any modification) mass shift is produced that will be small (within several Daltons) or large (hundreds of Daltons), depending on whether the co-fragmented peptide ions are of the same or different charge states, respectively. Such cases can be identified using linked MS1 and MS/MS spectral viewers (Supplementary Fig. 7a,c) and further evaluated using tools such as BatMass33 (Supplementary Fig. 7b,d). Although the number of such cases is small, in future work, chimeric spectra can be dealt with more accurately in open searches via MS1 feature detection of co-isolated peptides25 within MSFragger or using external tools34.
High prevalence of peptides identified in modified form only
To investigate the peptides (distinct sequences) found in narrow-window but not open search, we looked at the intersection of search results in the HEK293 data set (both searches were done without variable modifications). We subdivided the peptides on the basis of their estimated confidence (Fig. 2a) and examined the group-specific FDR. As expected, peptides that were accepted at 1% FDR in both searches (101,138 in total) were of high confidence, with an estimated FDR of 0.15%. Peptides found in both searches but accepted only at 1% FDR in one of the two searches were of lower confidence, as evidenced by the increased group FDR. Of greatest intrigue to us, however, were the peptides that were confidently identified in one search but were not identified at all in the other.
There were 12,622 peptides confidently identified in open search but not in narrow-window search. The relatively low group FDR of these peptides (4.15%) suggests that most of these are bona fide examples of peptides that were only detected in modified forms. The substantial number of such peptides is problematic for 'dependent-peptide' approaches for PTM identification14 (including spectral library-based methods)12,15 that rely on co-identification of the unmodified peptide. A comparison of the modification profile of these peptides to one that is generated from all modified peptides shows high similarity (Fig. 2b), suggesting that most of these identifications correspond to constitutive or highly abundant modifications.
Open searching uncovers FDR problem in traditional narrow-window searches
In contrast, the 3,773 peptides identified in narrow-window search but not in open search had a much higher group FDR, of 14.68%. We mapped the spectra supporting these identifications to their results in open search. Of particular interest were spectra that were assigned to unmodified peptides in narrow-window search but reassigned, owing to an improved match, as modified peptides (with different sequence) in open search. These cases represent potential instances of false positives in narrow-window search that are caused by chemical or biological modifications6,35. In each such instance—a pair of peptides whose masses differ by the mass of the modification detected in the open search—we compared the total number of supporting PSMs associated with the peptide sequence matched in narrow-window search to that in open search (Fig. 2c). Assuming that peptides supported by a greater number of PSMs are more likely to be true identifications, we found substantially more support for the peptides identified in open search. Only 17% of the spectra were assigned to peptides that had greater support in narrow-window search, whereas 68% had greater support for their open-search assignment.
We called peptide identifications found only in narrow-window search to be 'suspect' (potential false positives) if there was greater support for the open-search assignment for each supporting PSM. Of the 3,773 peptides found only in narrow-window search, 1,139 were suspect. This is significantly more than the number of decoys (554) in the same group, and more than the total number of decoys in the entire narrow-window search, at 1% FDR (1,091 decoys in total). This suggests that false positives in narrow-window search are not correctly estimated by decoy peptides. Notably, some of these suspect peptides had very high scores (Fig. 2d).
We sought to verify the finding that the target–decoy strategy does not effectively capture false positives due to unaccounted modifications. We selected high-scoring peptide identifications in open search that were observed in both unmodified form and with a mass shift corresponding to a common modification (oxidation or carbamylation). As we did not specify any variable modifications, the target-decoy assumption is that spectra from these modified peptides would match equally (and incorrectly) to both targets and decoys in narrow-window search. However, that was not the case, as the rate of matching to target sequences was roughly sixfold that of decoys for carbamylated peptide spectra, and more than ninefold for oxidized peptide spectra (Fig. 2e). The violation of the target–decoy assumption is probably due to homology between true peptide sequences and other peptides in the target space, which we previously noted in the context of proteogenomics6,36. Further supporting this, the modification profile of peptides identified in open search and whose spectra produced suspect identifications in narrow-window search markedly lacked phosphorylation and aminoethylbenzenesulfonylation (Fig. 2b). These two mass shifts (79.97 and 183.04 Da) are difficult to represent, as some sequence of amino acid addition and deletion. Overall, our analysis with the HEK293 data set (which showed trends similar to those observed for HeLa and breast cancer data sets (discussed below; data not shown) demonstrates that accounting for all modified peptide forms using the open-search strategy of MSFragger may be important for confident peptide identification, even when the identification of modified peptides is not the primary interest.
Ultrafast open search enables large-scale modification profiling
MSFragger's ultrafast performance enables comprehensive profiling of chemical and biological modifications across large-scale proteomics data sets. To demonstrate this, in addition to the HEK293 data set, we also probed HeLa37 and triple-negative breast cancer (TNBC)38 proteome-wide data sets using open searches and compared their modification profiles (Online Methods and Supplementary Table 2). We performed MS1-based correction of precursor masses followed by identification-based mass recalibration to improve the delineation of modifications with close masses across disparate experiments and labs (Online Methods and Supplementary Fig. 8). The list of the 500 most abundant mass shifts (excluding modifications specified as variable modifications in the search), is shown in Supplementary Table 3. We confirmed that in all data sets, FDR estimates for modified peptides were well controlled and not inflated relative to unmodified peptides. For example, in the HEK293 data set, peptide-level FDRs were 0.18%, 0.11%, and 0.11% for peptides with the top 500 most abundant mass shifts, top 100 most abundant mass shifts, and unmodified peptides, respectively (Supplementary Table 3).
We first interrogated several common chemical modifications (Fig. 3a). Although the localization profiles were largely concordant (Supplementary Fig. 9), their normalized abundances (modification rates) across the data sets were quite dissimilar. For example, the rate of phosphorylation in the HeLa data set was more than 14 times than that in the TNBC data set. Furthermore, some of these modifications were found on amino acids that are generally not considered in traditional workflows, such as tryptophan oxidation.
We observed many highly abundant mass shifts that lacked annotations in Unimod and were unique (or of much greater abundance) to a particular data set (Supplementary Table 3). To help decipher these unannotated modifications, we performed site localization analyses (Online Methods and Supplementary Table 4). For example, the HeLa data set contained more than 23,000 PSMs with a modification mass of 52.913 Da that were often localized to aspartic acid or glutamic acid, characteristic of metal ion adducts. This is likely to be iron displacing three protons (Unimod annotates a 'replacement of two protons by iron' modification only). We observed that many unannotated (in Unimod) mass shifts occurred on cysteines (Fig. 3b). While some can be explained (e.g., 151.996 corresponds to carbamidomethylated DTT modification of cysteine), deducing the identities of unannotated mass shifts was outside the scope of this work.
For some modifications, we were unable to localize the mass shift on the peptide (Fig. 3c). This suggests that there are few fragments that support the modification mass, or that the detected modification mass is the result of multiple modifications found on the same peptide. To investigate such cases, for each modification mass we computed a spectral similarity score between peptides containing that modification and their corresponding unmodified forms (Online Methods and Fig. 4). Most modifications possessed a similarity score between 0.4 and 0.6, including known modifications such as phosphorylation. Modifications that are localized to peptide C terminus, such as the C-terminal loss of arginine, disrupt the intense y-ion series and have lower similarity scores. However, we observed a large number of modifications (for example, 3,417 PSMs with mass shift of 301.986 Da in the HEK293 data set and 3,068 PSMs with mass shift 284.126 Da in the HeLa data set) with similarity scores close to 1, indicating that spectra for peptides with these modifications were largely unchanged from that of the unmodified peptide (Supplementary Fig. 10). The lack of differences in the spectra and relative uniqueness to a particular data set (Supplementary Table 3) suggest labile modifications that are specific to sample preparation protocol.
Utility of MSFragger in various proteomics applications
MSFragger enables a wide range of analyses beyond interrogation of unlabeled proteomes. We performed open searches using spectra from labeling-based experiments (for example, SILAC or tandem mass tag) by specifying the labeled amino acids as a variable modification, thus allowing quantitative comparison of the modification states of proteins en masse. To test this, we examined a breast cancer data set comprising 442 LC-MS/MS runs representing 88 formalin-fixed paraffin-embedded (FFPE) patient samples that were analyzed together with a heavy labeled super-SILAC mix39. Examination of the modification profiles revealed a wide range of abundant modifications in these samples and uncovered differences in modification abundances between the breast cancer samples and the super-SILAC mix, including a 30.011-Da mass shift that probably represents a methylol adduct which is characteristic of FFPE proteomes40 (Fig. 5a).
We also applied MSFragger to a large-scale protein-interaction study using an AP–MS experimental workflow that consisted of 2,594 baits analyzed in technical duplicates41. We reasoned that the lower sample complexity in AP–MS experiments provides an opportunity to examine in depth the modification state of enriched proteins, most notably the proteins used as baits. We performed both narrow-window and open searches on more than 64.6 million MS/MS spectra across 5,188 LC-MS/MS runs (Online Methods). Open search increased the total number of PSMs by 32%, an increase similar to those observed for data from whole-cell lysates. For the bait proteins, however, the number of identified PSMs increased, on average, by almost 300% (Fig. 5b and Supplementary Table 5). For some bait proteins the increase in the number of identifications was astonishing. For example, the mitochondrial persulfide dioxygenase protein ETHE1—a key member of the sulfur oxidation pathway that is itself involved in reactive oxidation of cysteine residues42—was identified by 48 and 2,474 peptide ions in narrow-window and open search, respectively (Supplementary Table 6). A large fraction of this increase was attributed to cysteine modifications. When we subjected the 100 bait proteins with the largest increases in the number of identified peptide ions to functional enrichment analysis using DAVID, the top enriched Gene Ontology (GO) biological process category (P = 0.00007) was 'small molecule metabolic process', containing 23 proteins from the selected list, including ETHE1 (Supplementary Table 7). Proteins in this category are involved in catalyzing modification processes and small-molecule adducts, which may be linked to higher numbers of modifications observed on these proteins themselves. These results suggest that application of MSFragger to affinity purification experiments can provide insights into a wide array of modifications, including rare and low-abundance ones, on highly enriched proteins. Furthermore, open searching may offer better accounting of protein abundances using spectral counts in AP–MS experiments and improve the quality of recovered interaction networks derived using interaction scoring tools43,44.
Finally, we applied MSFragger to a RNA–protein cross-linking study45. Computational analysis for such studies can be challenging owing to the need to determine a priori a list of potential cross-linked products. As open search allows the identification of peptides with unknown modifications, no such list is required. Using a 1,000-Da precursor mass window, we performed open search on a run comprising human UV-cross-linked RNA–protein complexes and a control nonirradiated run. We observed highly visible mass shifts associated with peptides cross-linked to mono-, di-, and tri-nucleotides in the irradiated sample that were largely absent from the control sample (Fig. 5c). We compared our results to that of the RNPxl computational strategy described in the original study and found that open search confidently identified 163 cross-linked species, compared to 189 reported by RNPxl, with 134 identifications in common. As expected, the open-search strategy failed to identify some of the cross-linked species containing very short peptides owing to an insufficient number of unmodified fragment ions (Fig. 5c). On the other hand, MSFragger identified 29 additional cross-linked species, most of which (all but four) were from proteins containing other cross-linked peptides already identified by RNPxl. Furthermore, MSFragger also identified a number of modified peptides from various RNA-binding proteins (including some not identified by RNPxl) with mass shifts that approximate the RNA cross-links (Supplementary Table 8). These peptides are likely cross-linked peptides that also contain some other chemical modification or adduct and are thus undetectable by the RNPxl strategy. Examples include the peptides YGRPPDSHHSR and SYGRPPPDVEGMTSLK from the protein SRSF2 (which was not identified by RNPxl, despite its identification of five other proteins from the SRSF family). This shows that MSFragger provides a simple but highly effective analysis workflow for identification of protein–RNA cross-linked peptides and demonstrates the insights gained through open searching in any experimental setup.
Discussion
The vast array of chemical and biological modifications adds a dimension to proteomics that is not fully explored in most studies, in part because of the bioinformatics challenges associated with comprehensive PTM searches. The advantage of open database searching, made practical using MSFragger, is its simplicity. In less time than is currently needed to run narrow-window searches, we can, in conjunction with existing workflows, simultaneously and comprehensively identify modified and unmodified peptide forms.
Given the fast growth of public repositories of MS data46, MSFragger could be used to search for rare (including novel) biological modifications across many biological samples and experimental conditions, adding to the list of previous such discoveries47. Open searching could be advantageous for characterization of neoantigens and other endogenous peptides48,49, many of which are present in modified forms. Monitoring the rates of common chemical modifications, and changes in modification rates across data sets and sample preparation protocols, is important for reproducibility in quantitative proteomics experiments, especially when relying on quantification of selected peptides as proxies for estimating abundance of their corresponding protein50. Comprehensive modification searches must be performed as part of any proteogenomics study, where confident identification of novel peptides (especially peptides containing polymorphisms) requires ruling out the possibility that their supporting spectra are due to common chemical or post-translational modifications of known peptides36. Furthermore, considering a wide range of peptide modifications may be necessary for obtaining accurate FDR estimations using the target–decoy strategy even in narrow-window searches that are concerned only with the identification of unmodified, tryptic peptides owing to high-scoring false positives from spectra of modified peptides. Thus, we believe that the open-search strategy, made practical by MSFragger, has the potential to become a valuable option for routine analysis of shotgun proteomics data.
Methods
Mass spectrometry data sets and file conversion.
We used six publicly available data sets to evaluate MSFragger (see Supplementary Table 2 for the list of files and the number of MS/MS spectra in each file). Data were acquired using a Thermo Scientific Q Exactive mass spectrometer (except data from the RNA–protein cross-linking study, which used a Thermo Scientific LTQ-Orbitrap mass spectrometer, with MS/MS spectra acquired in the Orbitrap analyzer). Thermo RAW files were converted to either mzXML or mzML format using the msconvert.exe tool from ProteoWizard (3.0.7398 64-bit version). Conversion was performed using vendor provided centroiding and default parameters.
MSFragger algorithm.
MSFragger spectrum input and pre-processing. MSFragger accesses mzXML and mzML files using MSFTBX, the Data Access Library provided as part of the BatMass project33, and Mascot Generic File (MGF) files using an internal parser. These data input paths allow MS/MS spectra stored in any of the three file formats (mzXML, mzML, and MGF) to be analyzed by MSFragger. Spectrum pre-processing begins with linear scaling of peak intensities so that the most intense peak within each spectrum is set to 100,000. Resultant scaled intensities are rounded and stored as integers for fast arithmetic operations. The top N peaks from each spectrum are retained and then filtered on the basis of the minimum intensity ratio and the m/z range specified in the search parameters file. In this study, the top 100 peaks with a minimum intensity ratio of 0.01 (relative to the base peak) were used with no m/z range filter.
In silico protein digestion and peptide indexing in MSFragger. MSFragger allows fully enzymatic, semi-enzymatic, and nonenzymatic digestion to be specified as search parameters. It also allows limits on missed cleavages, peptide lengths, and masses to be specified. For a given protein database and a fixed set of digestion parameters, a peptide index is generated to form a necessary reference for the fragment index. Peptide indexing takes just a few minutes on a typical computer. Furthermore, MSFragger caches the peptide indices it generates on disk and attempts to find and use a compatible peptide index on subsequent invocations. As the first step of in silico digestion, all proteins are concatenated into one long amino acid sequence with proteins separated by delimiter characters. MSFragger then partitions this long amino acid sequence into chunks for parallel in silico digestion into peptide sequences on the basis of the specified digestion parameters. Efficient memory allocation methods and compact representations of peptides (as offsets in the concatenated amino acid sequence and length) allow fast in silico digestion. The digested peptide sequences are then sorted using a parallel least significant digit radix sort and redundant peptides are flagged by comparing adjacent peptide sequences in the sorted list of peptides.
Modified versions of the digested peptide sequences are then generated on the basis of the user-specified variable modifications. Combinatorial bitmasks that specify the positions of modified residues are pre-computed so that the set of variably modified residues can be specified as a single integer. These sequence numbers are then combinatorially combined across all variable modifications to generate a single integer that represents the variable modification state of a peptide sequence. A 12-byte entry containing the offset, length, modification sequence number, and the modified mass is generated for each such modified peptide. These modified peptides are then sorted in parallel by their modified mass, forming the MSFragger peptide index.
Fragment index generation. The fragment index used in MSFragger consists of all theoretical b- and y-ions up to a specified charge state from each peptide in the peptide index. For efficient fragment index searching, the fragment bin width used for the fragment index must be proportional to the desired fragment tolerance specified in the search and to the expected number of candidate peptides encountered per experimental spectrum. Hence, MSFragger dynamically computes an appropriate bin width, in Daltons, that allows for efficient fragment index searching based on the user specified precursor mass tolerance and the fragment mass tolerance. Each peptide entry in the peptide index, consisting of both unmodified and variably modified peptides, can be referenced by a single 32-bit integer identification number (ID), imposing a current limit of approximately 2 billion peptide entries. Within each peptide entry, the theoretical fragments are generated and binned on the basis of their masses using the determined bin width. The theoretical fragments are stored within the fragment index as an 8-byte entry that references the parent peptide ID, the mass offset within the bin, the charge state, and the fragment-ion identity (for example, b-5 or y-2). Fragments within each bin are stored in order of their parent IDs (and hence the parent precursor mass) as the fragment index is generated in the order of the peptide index. The memory consumption of the fragment index is modest. For a tryptic digestion (with 1 missed cleavage) of the human UniProtKB database (with reversed decoys) used in the study, the fragment index is only 1.6 GB. Adding methionine oxidation and N-terminal acetylation of proteins as variable modifications boosted the index size to 2.9 GB. Examples of fragment index sizes (which includes the above common variable modifications) for larger search spaces include HLA peptides (nonenzymatic digest of 9–11 amino acids; 22.6 GB), semitryptic peptides (55.8 GB) and variably phosphorylated peptides (86.5 GB). MSFragger identifies the amount of memory available to it via the Java Virtual Machine and automatically partitions the fragment index generation and search into multiple iterations based on projected memory required for the fragment index, storing intermediate results on disk before merging and outputting the results in the final pass. This enables MSFragger to perform searches on computers that do not have sufficient memory to store the full fragment index, although at reduced speeds. In addition to the fragment index, MSFragger requires additional memory for storing the peptide index, spectra data, results, and intermediate data structures during search that is roughly 1 GB in most use cases.
Fragment index searching. In database search, the similarity scores are computed between each experimental spectrum and the theoretical spectra of all candidate peptides within a precursor mass range. These scores are heavily dependent on the number of shared fragment ions between the experimental spectrum and theoretical spectra. The major computational advance presented by MSFragger lies in its ability to rapidly identify these shared fragment ions and thus compute spectrum–spectra scores with near optimal efficiency. MSFragger first identifies the number of candidate peptides using the precursor mass window and the computed peptide index. It then allocates a scoring table for each candidate peptide where the number and summed intensities of matched b- and y-ions can be stored. It then performs spectrum-to-spectra scoring using the fragment index in the following manner. Consider a fragment ion with mass M within an experimental spectrum with precursor mass P. Using the fragment index, the algorithm can identify the theoretical spectra that contain a fragment with a matching mass by examining the fragment bins that overlap the interval [M – dF, M + dF], where dF is the fragment mass tolerance specified in Daltons or otherwise computed from M and the specified tolerance in parts per million (Fig. 1c).
For each overlapping fragment bin, a binary search (recall that the fragments within each bin are ordered by their parent precursor masses) is used to identify the fragment within the bin that corresponds to precursor mass P – dP, where dP is the precursor mass tolerance. The bin is then traversed, and the theoretical fragments within the bins are compared to determine whether they truly lie within the fragment mass tolerance window and whether the theoretical fragment charge state is compatible. If a match is identified, the scores of the parent peptide (recall that each theoretical fragment contains a reference to its parent) are then incremented in the scoring table. This traversal continues until the end of the bin or upon arrival at a fragment with parent precursor mass greater than P + dP. The process is then repeated for each overlapping fragment bin. At completion, this process using a single experimental fragment ion represents the contribution of that fragment ion to all spectrum–spectra scores. This process is repeated for each experimental fragment ion (Fig. 1d), in essence decomposing many spectrum–spectrum matches into multiple fragment–spectra matches. After processing all experimental fragment ions, the scoring table of candidate peptides contains the number of matching ions (and intensities) and is used to generate a similarity score for each candidate peptide.
The efficiency of this process lies in its ability to only examine fragments with a high likelihood of contributing to the similarity score. In conventional strategies, a comparison between an experimental spectrum and a theoretical spectrum can take tens or hundreds of operations, even in cases where they share no common fragments. In the MSFragger strategy, theoretical spectra that share no common fragments are effectively bypassed (apart from reading a score of 0 from the scoring table), as mostly relevant fragments are compared. In the case of open-window searching, approximately 1.5 comparisons on average are performed per candidate peptide, and more than 80% of fragment comparisons within the fragment index contribute to a similarity score (Supplementary Fig. 1). This algorithmic advantage that allows MSFragger to perform so few comparisons in similarity calculations is the reason why it performs >100 times faster than conventional search tools.
Fragment index searching in MSFragger is highly optimized. Tradeoffs between the number of bins to traverse (cost of binary searching and other overhead) and hit efficiency (percentage of fragments that fall within the fragment mass tolerance) is weighted and considered in fragment bin-width selection (Supplementary Fig. 1). The traversal algorithm is optimized for modern CPU cache sizes to reduce main memory accesses using a simultaneous traversal scheme for all experimental fragment ions. This allows overall improved performance and reduces memory bottlenecks in multi-core systems.
Scoring and results reporting. MSFragger computes a hyperscore similar to that of X! Tandem:
 
where Nb is the number of matched b-ions, Ny is the number of matched y-ions, Ib,i are the intensities of matched b-ions, and Iy,i are the intensities of matched b-ions. Although the theoretical fragment index can be adapted to include other fragment-ion types, only b- and y-ions are included and used for scoring at this time. Expectation calculation is also performed in a similar manner as X! Tandem through linear regression of the survival function to estimate the expectation of a given hyperscore51. The top N results, as specified by the search parameters, are reported in a XML file in the pepXML format, which can then be processed using the tools from the Trans-Proteomics Pipeline (TPP)52. For use in other computational workflows, converters exist that can convert pepXML results into other standard data output formats. Alternatively, a simple tab separated values output of the results can be obtained instead of the pepXML.
Boosting unmodified peptides. MSFragger implements an unmodified peptide boosting feature. When invoked, PSMs that have an absolute value of the mass shift dM (defined as the difference between the theoretical and observed precursor peptide mass) less than the true precursor tolerance threshold specified by the search parameters 'precursor_true_tolerance' / 'precursor_true_units' are placed into a different scoring heap that contains only such unmodified peptides. After the calculation of expectations for all PSMs in both the regular and unmodified scoring heap, a ranking expectation is generated for all PSMs. For entries in the regular scoring heap, containing both modified and unmodified PSMs, the ranking expectation is the same as the computed expectation. The ranking expectation for entries in the unmodified peptides heap is modified according to the specified search parameters (multiplied by the specified expectation boost or an arbitrary small value for those that pass the 'zero_bin_accept_expect' expectation) and recorded as the ranking expectation. All PSMs are then merged and ordered by their ranking expectations before results reporting. It is important to note that the original expectations are reported rather than the ranking expectation.
Complementary ions for the recovery of C-terminal modifications. The addition of complementary ions follows the basic spectra pre-processing described previously31,53. The top N observed fragment ions, as specified by the 'add_topN_complementary' ions parameter are selected and are assumed to be either a singly charged y-ion for all spectra and a doubly charged y-ion for spectra with an identified charge state of 3+ or higher. The m/z of the complementary singly charged b-ion is then calculated from the calculated neutral mass of the assumed y-ion and the observed precursor mass. A complementary ion with this m/z and intensity equal to the y-ion from which it was derived is then inserted into the spectrum. Complementary ions are generated for both the singly charged and the doubly charged assumption of the observed fragment ion so that N complementary ions are inserted for spectra with charge state 2+, and 2N complementary ions are inserted for spectra with charge state 3+ or higher. These modified experimental spectra are then subjected to open database searching. As the original experimental fragment ion (from which the complementary ions are generated) is retained in the spectrum, it is possible that a single experimental observation can be incorrectly interpreted as multiple fragmentation events. Future work involving the addition of complementary ions to the theoretical spectrum instead will eliminate this problem and improve localization of modifications.
MS1-based precursor mass correction and identification-based calibration.
Instrument-recorded precursor mass values for MS/MS spectra can be inaccurate, whereas repeated observations of a precursor in survey (MS1) scans can be highly precise. A supplementary tool was developed as part of the MSFragger pipeline that, for each MS/MS event, takes the recorded m/z and retention time, examines the corresponding space in MS1 scans, and extracts the nearest peak feature by tracing the mass in retention time. The m/z is then calculated as a weighted average (by intensity) of all peaks in the trace. The precursor m/z for each MS/MS event is then updated with this value. For certain MS/MS events in which it was not possible to reconstruct the associated peak feature, no changes to the recorded m/z are made. Following precursor mass correction, identification-based mass recalibration of the MS/MS run is performed. To compare modification profiles that are resolved at sub-p.p.m. levels across disparate experiments and labs, this calibration step is critical, as slight deviations can cause broadening of features in the profile and loss of power in recovering modifications. To perform this calibration, unmodified peptide identifications with observed mass difference dM less than 20 p.p.m. are selected. As instrument bias may drift over time and varies across m/z, a two-dimensional calibration grid is constructed using a retention time width of 5 min and an m/z width of 200 m/z. For each unmodified peptide, the corresponding cell in the grid is found. A weighted p.p.m. bias, based on the proximity to each point, is added to each of the four points corresponding to that cell. The weighted averages on the calibration grid are then used to adjust the precursor m/z for all observed MS/MS events in the run. The corrected and calibrated m/z values are then written to a calibration file that is incorporated in downstream analysis.
Statistical modeling of MS/MS search results and protein inference.
X! Tandem, Comet, and MSFragger output files were uniformly processed by PeptideProphet54 via the Trans-Proteomic Pipeline (TPP v4.8.0), followed by ProteinProphet55 analysis to assemble peptides into proteins/protein groups. The results from the narrow-window searches were processed using the following settings: PeptideProphet was run using 'P' (semi-parametric modeling), 'd' (report decoy hits), 'E' (calculation of posterior probabilities using search engine computed expectation values as primary peptide identification scores), and 'A' (high–mass accuracy model), 'PPM' (use parts per million instead of Daltons in accurate mass binning), and the ProteinProphet was run using default settings. For open searches, several custom modifications were made to these downstream processing tools. First, PeptideProphet was run without 'A' and 'PPM' options, and using a mass accuracy model extended to cover the entire (–1,000 Da to 1,000 Da) range (see below). Second, in ProteinProphet, we did not want to incorporate modified peptides in the determination of protein groups or the establishment of protein identities. Thus, ProteinProphet was adjusted to ignore any modified peptides while being careful to retain peptide identifications that are likely triggered from 13C isotope peaks of unmodified peptides.
Extended mass model in PeptideProphet.
For open searches, the mass model of PeptideProphet was extended to effectively adjust for different likelihoods of obtaining a correct identification among unmodified peptides and peptides with different types of modifications (mass shifts). In brief, PeptideProphet models the distribution of scores observed in each data set as a mixture of two component distributions representing correct and incorrect identification, respectively. The key underlying assumption is a multivariate mixture distribution of the database search score (here, the expectation values produced by the search tools) and other parameters (most notably, the mass shift dM), which leads to the calculation of the probability of correct identification for individual peptide assignments by the Bayes rule. The mass shift parameter dM (which in the context of narrow-window searches is referred to as mass accuracy) is computed for each PSM as the difference between the calculated and measured precursor peptide masses56. Unlike narrow-window searches, in open searches the range of possible dM values is extended, for example, to cover a range of −1,000 to 1,000 Da. The dM values are discretized into bins of 1 Da in size (centered at integer values). The distributions of database search scores and dM mass shifts are modeled simultaneously, resulting in the joint probability model and computation of posterior peptide probabilities. In doing so, the mass shift dM model is estimated from the data, defining likelihoods of observing a correct versus incorrect identification among all PSMs belonging to a particular dM bin. As the main outcome, two PSMs with identical expectation values but having different binned dM values (for example, 0 and 135) would receive very different probability scores, reflecting the fact that the estimated fraction of correct identifications in the dM ∼ 0 bin (i.e., unmodified peptides) is much higher than that among peptides with a dM value around 135 Da (rare modification). Although the mass model helps to account for the differences in the likelihoods of observing unmodified peptides and different modified forms, coarse single-Dalton binning fails to account for the p.p.m. levels of accuracy present in these data from high–mass accuracy instruments, and thus the model can further benefit from future revisions.
FDR estimation.
For the benchmarking analysis of the HEK293 data set, protein groups assembled by ProteinProphet were first filtered to remove proteins with protein probability <0.9. The list was then filtered to 1% FDR using the maximum peptide probability as the ranking metric (maximum peptide probability was found to be more discriminative score than the protein probability in large data sets)57. PSMs, and peptides belonging to this set of filtered proteins that also passed a 1% FDR (within their respective class) were counted and their FDRs were reported. In all other analyses, protein-level FDR was not estimated and filtering was performed at the peptide and PSM levels. PSMs were assembled into unique peptide sequences and the maximum PSM probability was used as the peptide probability. Peptides were then filtered at a 1% peptide FDR, and PSMs that passed both a 1% peptide level FDR and a 1% PSM level FDR were retained for downstream analysis.
Benchmarking analysis using the HEK293 data set.
For extensive benchmarking and comparison between MSFragger and other tools using the HEK293 data set, all spectra were searched using MSFragger, X! Tandem (Piledriver 2015.04.01.1), and Comet (2015.02 rev.1). Analysis was done using all files (24 LC-MS/MS runs, ∼1.1 million spectra) for identification rate benchmarking, or one representative file for timing benchmarks (run b1906, 41,820 spectra). The searched sequence database was created from the human protein sequences of Ensembl version 78 appended with reversed protein sequences as decoys and common contaminants (cRAP proteins sequences from gpmDB and contaminants from MaxQuant). All searches were done considering only y- and b-ions in scoring, allowing tryptic peptides only, up to 1 missed cleavage, and with cysteine carbamidomethylation specified as a fixed modification. Data were searched using either 100 p.p.m. (narrow-windows searches) or 500-Da (open searches) precursor mass tolerances. X! Tandem search engine used the following algorithm-specific parameters: select top 50 peaks for fragment matching, 20 p.p.m. fragment-ion mass tolerance, and requiring at least four matched fragment ions for a PSM to be reported. Note that X! Tandem automatically considers three additional modifications (conversion to pyroglutamate from glutamine or glutamic acid, and N-terminal acetylation). Comet searches were performed using recommended settings for high–mass accuracy fragment data (precursor mass binning of 0.02 Da, 0 mass offset). MSFragger searches were performed using described parameters. To enable more accurate comparison with X! Tandem results, MSFragger searches (both narrow-window and open) were also performed allowing same common modifications as those mentioned above for X! Tandem specified as variable modifications. For comparison with SEQUEST, the identification numbers—i.e., the numbers of PSMs, unique peptide sequences, and proteins (Table 1), were taken from the original publication4.
For benchmarking the computational time (Table 1), MSFragger, Comet, and X! Tandem were also run using the single representative file referenced above on a 4-core Linux workstation (Intel Xeon E3-1230v2). In addition, the data were searched using Tide (Crux version 2.1.16838), which only allows a maximum of 100-Da mass tolerance and is single threaded. The run time for Tide, and for MSFragger run under the same constrains as Tide, are shown in Supplementary Table 1. For SEQUEST, the computational time listed in Table 1 was obtained by searching the data using the SEQUEST-HT version as implemented as part of the Proteome Discoverer v. 2.1 software, operated on a 8-core workstation (2x Intel Xeon E5-2609v2). The search parameters for SEQUEST-HT were as above, except the mass tolerance in the narrow-window search was 5 p.p.m. as in the original publication. All computational time benchmarking results can be found in Supplementary Table 1.
Comparison between MSFragger and MODa.
MODa (v.1.51) was run in single-blind mode with a maximum modification size of 500 Da and a fragment tolerance of 0.02 Da. Cysteine carbamidomethylation was specified as a static modification. High-resolution MS/MS search was enabled. Tryptic digestion was specified with at most one missed cleavage. Both fully tryptic and semitryptic searches were performed using MODa. FDR filtering was performed using the 'anal_moda.jar' tool bundled with the MODa tool to achieve a FDR of 1%. For comparison with MSFragger, we filtered the fully tryptic MSFragger open-search results at 1% PSM FDR (without the 1% protein level filter that was used for the rest of the HEK293 benchmark comparison).
Large-scale profiling of chemical modification.
Large-scale profiling of chemical modifications was performed using the sequence database created from the human sequences of UniProtKB (downloaded 9 October 2015) appended with reversed protein sequences as decoys and common contaminants (cRAP proteins sequences from gpmDB and contaminants from MaxQuant). A precursor mass tolerance of 500 Da was used with fragment tolerance of 20 p.p.m. Isotopic error correction was disabled, and common variable modifications of methionine oxidation and N-terminal acetylation were enabled. Carbamidomethylation was specified as a static modification. PSMs and peptides that contain modifications that were specified in our search parameters were not considered to have a mass shift for the tabulation of mass shifts. Fully tryptic digestion was specified allowing up to one missed cleavage. Complementary ions and boosting features were disabled and other MSFragger options were left as default.
MSFragger search results from each LC-MS/MS run were subjected to peptide validation as described above. Peptide probability was determined by the highest supporting PSM probability. Results for each experiment were aggregated and filtered at 1% peptide FDR. PSMs were separately filtered at 1% PSM FDR and only PSMs that passed both the 1% PSM FDR and 1% peptide FDR were retained for downstream analysis.
Modeling of observed modification profiles and detection of modification peaks.
Normalized density profiles for each experiment were generated for comparison across different experiments. Corrected mass differences, with random noise on the order of ±5 μDa added to break ties, were binned using 0.0002-Da bins to form an initial counts histogram. These counts were then distributed to adjacent bins using the weights 0.23 (bin to left), 0.49 (same bin), 0.23 (bin to right) to smooth the histogram and improve the monotonicity of peak shapes. These histograms were then normalized by dividing each bin by the total number of spectra (in millions) acquired in the respective experiments. Averaging the counts in each bin generated an average profile of the three experiments. Mixture modeling of the average profile failed to precisely capture known modifications. Examination of the profile revealed peaks of varying broadness and further examination revealed the peak shape to be a complex function of the charge state and m/z of the underlying PSMs. Instead, we used a prominence-based peak detection method that found features on the histogram by requiring that the peak prominence was at least 0.3 times that of the peak height. As known modifications were observed to have a peak width of approximately 0.004 Da (given current instrument accuracies and the correction/calibration method applied as described above), these features were ordered by the rise in density compared to the 0.003-Da flanking regions. It should be noted that some of the detected features (mass bins) could be artifacts of the peak picking algorithm or may correspond to various combinations of multiple modifications.
Mass shift annotation using Unimod.
The Unimod repository was downloaded (on 22 April 2016) in XML format and parsed to extract modification names and mass shifts. Mass shifts associated with the addition or deletions of the 20 amino acids were appended to this list. Multiples of the mass difference between 13C and 12C were added as 'first isotopic peak' and 'second isotopic peak' to account for isotopic peak picking errors. Entries that represent a single mass shift in this list were concatenated into a single entry so that a single text identifier represented each mass shift. Annotation of the list of mass shifts proceeded in decreasing order of abundance. For each mass shift, the mass is queried against the described database of annotations with a mass tolerance of 0.002 Da. If a match is found, the mass shift is annotated with the entry from the database. If the mass shift cannot be matched to a single entry in the database, we attempt to compose multiple (up to 3) previously observed (in the order of annotation) mass shifts to account for compound modifications. If the mass shift remains unexplained, we add it to our list of annotations as a new un-annotated mass shift.
Localization of detected mass differences.
For each PSM, including unmodified peptides, the observed mass difference is evaluated to see whether it can be attributable to a modification of a specific site (position in the peptide). For each MS/MS run, the list of identified spectra (which includes the spectrum ID, peptide sequence, list of variably modified amino acids, and observed mass difference) is obtained from the MSFragger analysis pipeline, and the corresponding MS/MS spectra are extracted from the original MS data file. The number of matched fragment ions is then re-computed using the same hyperscore function as originally done in MSFragger. The observed mass difference is iteratively placed on each amino acid, and for each position the spectrum similarity is computed to derive the number of matching fragment ions, and then the hyperscore. A PSM is called localizable if there is at least one position that generates a higher number of matched fragments than the rest. As there may be insufficient fragments to support an unambiguous localization in the peptide sequence, all positions that share the highest hyperscore are marked as a possible localization site. A PSM is called to be localized to the N terminus if the localized positions form an uninterrupted stretch of amino acids from the N terminus.
The localization results are then aggregated for each identified mass bin, and their localization characteristics examined. For each bin, the overall localization rate (the percentage of PSMs within that bin that are localizable), the N-terminal localization rate (the percentage of PSMs within that bin that are localizable and the localization is N-terminal), and the amino acid enrichment are computed. The amino acid enrichment is determined by first computing the amino acid composition of all peptides within the mass bin. Then, the number of localization sites attributable to each amino acid is summed across all localizable PSMs (for a PSM with multiple localization sites, each site gains a weight equal to 1 / number of localized sites). The total localization count for each amino acid is then normalized to form the localization rate. Amino acid enrichment is then determined by the ratio of localization rate to composition rate. It should be noted that while this metric is informative in many cases, it may be misleading in bins containing few PSMs or bins that are dominated by several abundant peptides that skews the counts and normalization factors.
Spectral similarity scores for modifications.
For each modified PSM, we identify corresponding PSMs of the same charge state that identifies the same peptide but with a mass difference of less than 0.001 Da (indicating an unmodified peptide). We compute the average cosine similarity between the spectrum of the modified PSM and spectra corresponding to the unmodified peptide (if there are more than 50 such spectra, 50 are chosen at random). We then normalize for variations within unmodified spectra by dividing the average cosine similarity within the set of unmodified spectra to obtain a similarity score for the modified PSM. For each modification mass, its similarity score is determined by averaging the similarity scores calculated for each modified PSM within its mass tolerance.
Analysis of SILAC data sets.
The breast cancer SILAC data set was analyzed using the same search settings as the large-scale modification profiling described above with the exception that two variable modifications were added for the heavy-labeled residues: 8.0142 Da at lysine and 10.00827 Da at arginine. Precursor mass correction and calibration and peptide validation were performed on each file and the aggregated files from the experiment were subjected to a 1% peptide and PSM FDR filter (each retained PSM passed 1% PSM FDR and matched a peptide that passed 1% peptide FDR). Each PSM in the resultant list was then examined for the presence of a heavy-labeled residue (as determined by identification with a heavy labeled variable modification). Unlabeled PSMs were considered to have originated from the patient samples, and labeled PSMs were considered to have originated from the super-SILAC mix.
Analysis of AP–MS data set.
Open-search parameters for the AP–MS data set were also similar to the settings used for large-scale modification profiling with one exception. As iodoacetamide treatment of samples was not used, no static modification was specified for cysteine. Each of the 5,188 runs was subjected to peptide validation and mass correction individually. FDR filtering was performed for each run individually, filtering the data at 1% FDR (at both peptide and PSM levels). Narrow-window searches were performed using the same parameters with the exception of a 20 p.p.m. precursor tolerance window and isotope selection error of 0/1/2 was enabled.
For each LC-MS/MS run, all PSMs that were matched to a UniProt accession associated with the bait protein were considered to have originated from the bait protein (including any shared peptides). The number of unique sequences was determined by examining the set of unique peptides represented by the PSMs. Total counts for a particular bait protein across the replicates were determined by summing bait PSMs across the two replicates and determining the number of unique peptide sequences. Average fold change between narrow-window and open searches was determined by linear regression in R.
Analysis of RNA–protein cross-link data set.
Open searching for the cross-linking data set was performed similar to the large-scale modification profiling searches. The precursor mass window was enlarged to ±1,000 Da to accommodate heavier cross-linked fragments. Carbamidomethylation was not specified as a fixed modification on cysteine. Comparison of results obtained by RNPxl and MSFragger was performed using the peptide sequence and mass difference. Identifications from RNPxl were translated into a peptide sequence and a total RNA-peptide mass. An identification from MSFragger was considered to be a match if it shared the same peptide sequence and had a total mass that differed from the RNPxl-based identification by no more than 0.05 Da.

